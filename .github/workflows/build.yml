name: Build
on:
  # (you may add filters for when running the workflow)
  push:
    branches:
      - main
  pull_request:
env:
  # better visualization
  CARGO_TERM_COLOR: always
jobs:
  # the first job is used to acquire some tag-naming information
  #
  # this snippet was based on:
  # https://raw.githubusercontent.com/BurntSushi/ripgrep/master/.github/workflows/release.yml
  # in case a tag was set, a binary release will be made
  create-release-on-tags:
    name: Create a new release on tags
    runs-on: ubuntu-latest
    # env:
      # Set to force version number, e.g., when no tag exists.
      # RG_VERSION: TEST-0.0.0
    outputs:
      rg_version: ${{ env.RG_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.RG_VERSION == ''
        run: |
          # Apparently, this is the right way to get a tag name. Really?
          #
          # See: https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
          echo "RG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.RG_VERSION }}"

  # this second job builds and tests the contracts
  # if it's a tag release, it also creates their release file
  build:
    # in case this is a binary release, we make sure to wait
    # for any requirement to be ready
    needs: ['create-release-on-tags']
    runs-on: ubuntu-latest
    steps:
      - name: Install cargo-near CLI
        run: curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/cargo-near/releases/latest/download/cargo-near-installer.sh | sh
      # build
      - name: Build
        run: ./build.sh
      # run the tests (which depend on the binaries from res/)
      - name: Run native tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          # the jobs is optional, to reduce RAM usage
          # the --nocapture prints the tests' stdout
          args: --jobs=2 -- --nocapture
      # for tagged runs, create an archive releaseruns
      #
      # based on:
      # https://raw.githubusercontent.com/BurntSushi/ripgrep/master/.github/workflows/release.yml
      - name: Build archive
        if: startsWith(github.ref, 'refs/tags')
        shell: bash
        run: |
          staging="contracts-${{ needs.create-release-on-tags.outputs.rg_version }}"
          mkdir -p "$staging/info"
          # copy all markdown files
          find . -name \*.md -not -path "./target/*" -prune -not -path "./$staging/*" -prune -exec cp --parents {} "$staging/info/" \;
          # copy all wasm files
          cp res/*.wasm "$staging/"
          # save the tag name and git sha to the VERSION file
          echo ${{ needs.create-release-on-tags.outputs.rg_version }} >> "$staging/info/VERSION"
          git rev-parse HEAD >> "$staging/info/VERSION"
          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
      - name: Upload release archive
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
